#problem 1
def count_mississippi(limit):
    for num in range(1, limit):
        print( f"{num} mississippi")
count_mississippi(6)

#problem 2
def swap_ends(my_str):
    end = len(my_str)
    swappedWord = [my_str[end-1],my_str[1:end-1], my_str[0]]
    joinedWord =  "".join(swappedWord)
    print(joinedWord)
    #return my_str[end-1] + my_str[1:end-1] + my_str[0]
swap_ends("boat")

#problem 3
def is_pangram(my_str):
    #set cant store repeated values
    alphebet = ["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]
    my_set = set(alphebet)
    for c in my_str:
        if c in my_set:
            my_set.remove(c)
    if my_set:
        return False
    return True

my_str = "The quick brown fox jumps over the lazy dog"
print(is_pangram(my_str))

str2 = "The dog jumped"
print(is_pangram(str2))

#problem 4
def reverse_string(my_str):
    end = len(my_str)

    reversed_word = []
    
    i = len(my_str)
    while i > 0:
        reversed_word.append(my_str[i-1])
        i -= 1
    joinedWord = "".join(reversed_word)
    return joinedWord

my_str = "live"
print(reverse_string(my_str))

#problem 5
map = []
def first_unique_char(my_str):
    for i in range(len(my_str)):
        if map.get(my_str(i)) != None:
            map.append(i)
    return -1

my_str = "leetcode"
print(first_unique_char(my_str))

str2 = "loveleetcode"
print(first_unique_char(str2))

str3 = "aabb"
print(first_unique_char(str3))

#problem 6